
require File.dirname(__FILE__) + "/spec_helper.rb"

require "fileutils"
require "aws/s3"

include Castoro

describe S3Adapter::Service do
  before(:all) do
    @l = Logger.new nil
    @s = S3Adapter::Service.new @l
    @s.start
    sleep 1.0

    # preset castoro test files.
    tmp = File.dirname(__FILE__) + "/../tmp"
    FileUtils.mkdir_p tmp
    FileUtils.mkdir_p File.join(tmp, "host1", "1.1.1")
    File.open(File.join(tmp, "host1", "1.1.1", "hoge.txt"), "w") { |f| f.puts "hoge.txt\n12345\nABC" }

    # for test.
    Castoro::S3Adapter::Adaptable::BASE.replace tmp

  end

  before(:each) do
    # mock for castoro-client
#    @client = mock(Client)
    Client.stub!(:new).and_return { @client }

    # castoro-client methods implementation for mock
    client_alive = false
    sid = 0

    @client.stub!(:open).and_return {
      raise ClientError, "client already opened." if client_alive
      client_alive = true
    }
    @client.stub!(:close).and_return {
      raise ClientError, "client already closed." unless client_alive
      client_alive = false
    }
    @client.stub!(:opened?).and_return { !! client_alive }
    @client.stub!(:closed?).and_return { ! @client.opened? }
    @client.stub!(:sid).and_return { sid }

    @client.stub!(:get).and_return { nil }
    @client.stub!(:create).and_return { nil }
    @client.stub!(:create_direct).and_return { nil }
    @client.stub!(:delete).and_return { nil }

    @client.stub!(:get).with("1.1.1").and_return {
      { "host1" => "1.1.1" }
    }
  end

  describe "GET Bucket" do
    it "hoge" do
      AWS::S3::Base.establish_connection!(
        :server => "127.0.0.1",
        :port => 8080,
        :access_key_id => "castoro",
        :secret_access_key => "castoro"
      )
      objects = AWS::S3::Bucket.objects("1.1.1")
      puts
      puts objects
      puts
    end
  end

  describe "GET Object" do
    it "hoge" do
      AWS::S3::Base.establish_connection!(
        :server => "127.0.0.1",
        :port => 8080,
        :access_key_id => "castoro",
        :secret_access_key => "castoro"
      )
      value = AWS::S3::S3Object.value("hoge.txt", "1.1.1")
      puts
      puts value
      puts
    end
  end

  it "moe" do
    `wget http://localhost:8080/1.1.1/hoge.txt`
  end

  after(:all) do
    @s.stop
  end
end

